@model ToDoManagement.ViewModels.TodoViewModel

@{
    var statusOptions = Enum.GetValues(typeof(ToDoManagement.Enums.TodoStatus)).Cast<ToDoManagement.Enums.TodoStatus>().ToList();
    var priorityOptions = Enum.GetValues(typeof(ToDoManagement.Enums.TodoPriority)).Cast<ToDoManagement.Enums.TodoPriority>().ToList();
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Todo List</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
</head>

<body>
    <div class="container my-5">
        <h3 class="text-center">Todo List</h3>
        <div class="text-end mb-4">
            <a href="@Url.Action("AddTodo", "Todo")" class="btn btn-success">
                <i class="bi bi-plus-circle"></i> Add Todo
            </a>
        </div>
        <form asp-action="Index" method="get" class="mb-4">
            <div class="row">
                <div class="col-md-3">
                    <label for="Status" class="form-label">Filter by Status</label>
                    <select id="Status" name="status" class="form-select">
                        <option value="">All</option>

                        @foreach (var status in Model.StatusOptions)
                        {
                            @if (status.Selected)
                            {
                                <option value="@status.Value" selected>@status.Text</option>
                            }
                            else
                            {
                                <option value="@status.Value">@status.Text</option>
                            }
                        }

                    </select>
                </div>

                <div class="col-md-3">
                    <label for="Priority" class="form-label">Filter by Priority</label>
                    <select id="Priority" name="priority" class="form-select">
                        <option value="">All</option>

                        @foreach (var priority in priorityOptions)
                        {
                            @if (Model.SelectedPriority != null && Model.SelectedPriority == priority.ToString())
                            {
                                <option value="@priority.ToString()" selected>@priority</option>
                            }
                            else
                            {
                                <option value="@priority.ToString()">@priority</option>
                            }
                        }

                    </select>
                </div>

                <div class="col-md-3">
                    <label for="DateRange" class="form-label">Filter by Date Range</label>
                    <div class="d-flex">
                        <input type="date" id="StartDate" name="startDate" class="form-control" value="@Model.StartDate?.ToString("yyyy-MM-dd")">
                        <span class="mx-2">to</span>
                        <input type="date" id="EndDate" name="endDate" class="form-control" value="@Model.EndDate?.ToString("yyyy-MM-dd")">
                    </div>
                </div>

            </div>
            <div class="mb-4 mt-4">
                <button type="submit" class="btn btn-primary w-100">Filter</button>
            </div>
        </form>

        <form asp-action="Index" method="get" class="mb-4">
            <button type="submit" class="btn btn-secondary w-100">Clear Filter</button>
        </form>
        <div class="mb-4">
            <h5>Selected Filters:</h5>
            <ul>
                @if (!string.IsNullOrEmpty(Model.SelectedStatus))
                {
                    <li><strong>Status:</strong> @Model.SelectedStatus</li>
                }
                @if (!string.IsNullOrEmpty(Model.SelectedPriority))
                {
                    <li><strong>Priority:</strong> @Model.SelectedPriority</li>
                }
                @if (Model.StartDate != null)
                {
                    <li><strong>Start Date:</strong> @Model.StartDate</li>
                }
                @if (Model.EndDate != null)
                {
                    <li><strong>End Date:</strong> @Model.EndDate</li>
                }
            </ul>
        </div>

        <table class="table table-bordered" id="todoTable">
            <thead>
                <tr>
                    <th>
                        Title
                        <button class="btn btn-link" id="sortTitleAsc">A-Z</button>
                        <button class="btn btn-link" id="sortTitleDesc">Z-A</button>
                    </th>
                    <th>
                        Created Date
                        <button class="btn btn-link" id="sortDateAsc">Old-New</button>
                        <button class="btn btn-link" id="sortDateDesc">New-Old</button>
                    </th>
                    <th>Status</th>
                    <th>Priority</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var todo in Model.Todos)
                {
                    <tr>
                        <td><a href="@Url.Action("Details", "Todo", new { id = todo.Id })">@todo.Title</a></td>
                        <td>@todo.CreatedDate.ToString("yyyy-MM-dd")</td>
                        <td>
                            @if (todo.Status == ToDoManagement.Enums.TodoStatus.Pending)
                            {
                                <span class="icon pending">&#x1F6A7; Pending</span>
                            }
                            else if (todo.Status == ToDoManagement.Enums.TodoStatus.InProgress)
                            {
                                <span class="icon in-progress">&#x1F4C8; In Progress</span>
                            }
                            else if (todo.Status == ToDoManagement.Enums.TodoStatus.Completed)
                            {
                                <span class="icon completed">&#x2705; Completed</span>
                            }
                        </td>
                        <td>
                            @if (todo.Priority == ToDoManagement.Enums.TodoPriority.Low)
                            {
                                <span class="icon low">Low</span>
                            }
                            else if (todo.Priority == ToDoManagement.Enums.TodoPriority.Medium)
                            {
                                <span class="icon medium">Medium</span>
                            }
                            else if (todo.Priority == ToDoManagement.Enums.TodoPriority.High)
                            {
                                <span class="icon high">High</span>
                            }
                        </td>
                        <td>
                            <form asp-action="Delete" method="post" style="display:inline;" id="deleteForm-@todo.Id">
                                <input type="hidden" name="id" value="@todo.Id" />
                                <button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete('@todo.Id')">
                                    <i class="bi bi-trash"></i> Delete
                                </button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function () {
            $('#sortTitleAsc').on('click', function () {
                sortTable(0, 'asc');
            });

            $('#sortTitleDesc').on('click', function () {
                sortTable(0, 'desc');
            });

            $('#sortDateAsc').on('click', function () {
                sortTable(1, 'asc');
            });

            $('#sortDateDesc').on('click', function () {
                sortTable(1, 'desc');
            });

            function sortTable(columnIndex, order) {
                var rows = $('#todoTable tbody tr').get();

                rows.sort(function (a, b) {
                    var cellA = $(a).children('td').eq(columnIndex).text();
                    var cellB = $(b).children('td').eq(columnIndex).text();

                    if (order == 'asc') {
                        return cellA.localeCompare(cellB);
                    } else {
                        return cellB.localeCompare(cellA);
                    }
                });

                $.each(rows, function (index, row) {
                    $('#todoTable tbody').append(row);
                });
            }
        });
    </script>
    <script>
        function confirmDelete(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    document.getElementById('deleteForm-' + id).submit();
                    Swal.fire(
                        'Deleted!',
                        'Your todo has been deleted.',
                        'success'
                    );
                }
            });
        }
    </script>
</body>
</html>
